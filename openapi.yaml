openapi: 3.0.0
info:
  version: "0.1.0"
  title: Parley
tags:
  - name: Unauthenticated
  - name: Authenticated
paths:
  /:
    get:
      tags:
        - Unauthenticated
      summary: Gets basic info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  running:
                    type: string
                    enum: [Parley]
                    example: Parley
                  version:
                    type: string
                    example: 0.1.0
  /login:
    post:
      tags:
        - Unauthenticated
      summary: Log in
      responses:
        '200':
          description: All valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/challenge"
        '400':
          description: Public doesn't match
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
        '401':
          description: Invalid username or passkey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - passkey
                - publickey
              properties:
                username:
                  type: string
                passkey:
                  type: string
                publickey:
                  type: string
  /signup:
    post:
      tags:
        - Unauthenticated
      summary: Sign up
      responses:
        '200':
          description: All valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/challenge"
        '400':
          description: Username in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
        '401':
          description: Invalid public key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - publickey
              properties:
                username:
                  type: string
                publickey:
                  type: string
  /solve:
    post:
      tags:
        - Unauthenticated
      summary: Solve challenge
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - solve
              properties:
                solve:
                  type: string
      responses:
        '200':
          description: Valid
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/valid"
                  - $ref: '#/components/schemas/loginresponse'
                  - $ref: '#/components/schemas/signupresponse'
        '401':
          description: Invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
  /me:
    get:
      tags:
        - Authenticated
      summary: Get current user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: "Men"
                  display:
                    type: string
                    example: "s'embrassant"
                  picture:
                    type: string
                    example: "https://.../image.png"
  /channels:
    get:
      tags:
        - Authenticated
      summary: Get user channels
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1234"
                    name:
                      type: string
                      example: "Friend"
                    picture:
                      type: string
                      example: "https://.../image.png"
  /messages:
    get:
      tags:
        - Authenticated
      summary: Get the messages of a channel
      parameters:
        - in: query
          name: channel
          schema:
            type: string
          required: true
          description: ID of channel
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: ["Message","AESKeyExchange"]
                      example: "Message"
                    content:
                      type: string
                      example: "Encrypted object"
  /reset-keys:
    post:
      tags:
        - Authenticated
      summary: Reset public and private keys
      responses:
        '200':
          description: Valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/challenge"
        '400':
          description: Invalid public key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - publickey
              properties:
                publickey:
                  type: string
components:
  schemas:
    challenge:
      type: object
      properties:
        challenge:
          type: string
          example: Encrypted value
    valid:
      type: object
      properties:
        success:
          type: boolean
          example: true
    invalid:
      type: object
      properties:
        success:
          type: boolean
          example: false

    loginresponse:
      type: object
      properties:
        session:
          type: string
          example: Token
    signupresponse:
      type: object
      properties:
        session:
          type: string
          example: Token
        passkey:
          type: string
          example: Passkey